name: Docker Image CI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    tags:

env:
  GHCR_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: langfarm/python

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub and GitHub Packages
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    strategy:
      matrix:
        PYTHON_VERSION: ["3.11.11", "3.12.9"]

    steps:
      - name: Display Python Version
        env:
          PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
        run: |
          echo "Build PYTHON_VERSION = ${PYTHON_VERSION}"

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: langfarm
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.PYTHON_VERSION }}
            type=semver,pattern={{version}}-alinux3,value=${{ matrix.PYTHON_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.PYTHON_VERSION }}
            type=semver,pattern={{major}}.{{minor}}-alinux3,value=${{ matrix.PYTHON_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            PYTHON_VERSION=${{ matrix.PYTHON_VERSION }}
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
